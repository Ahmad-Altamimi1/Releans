{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Releans\\\\frontend\\\\src\\\\component\\\\Functions\\\\MakeNotiOpen.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateNoti = async () => {\n  try {\n    const response = await axios.get(`http://127.0.0.1:8000/api/notifications/${id}`);\n    const product = response.data.product;\n    console.log(response.data);\n    setFormData({\n      name: product.name,\n      quantity: product.quantity,\n      price: product.price,\n      description: product.description\n    });\n  } catch (error) {\n    console.error(\"Error fetching product:\", error.message);\n  }\n};\n_c = UpdateNoti;\nconst fetchNotifications = async () => {\n  try {\n    const response = await axios.get(\"http://127.0.0.1:8000/api/notReednotifications\");\n    console.log(response.data.notifications);\n    return response.data.notifications;\n  } catch (error) {\n    throw new Error(\"Network response was not ok\");\n  }\n};\nconst MakeNotiOpen = ({\n  isOpen\n}) => {\n  _s();\n  const {\n    data: notifications,\n    isLoading,\n    isError\n  } = useQuery(\"notifications\", fetchNotifications);\n  notifications.forEach(noti => {\n    try {\n      UpdateNoti();\n    } catch {}\n  });\n  return isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }, this) : null;\n};\n_s(MakeNotiOpen, \"azkU/B05xVNSfeN7DkvElM2Xeu4=\", false, function () {\n  return [useQuery];\n});\n_c2 = MakeNotiOpen;\nexport default MakeNotiOpen;\nvar _c, _c2;\n$RefreshReg$(_c, \"UpdateNoti\");\n$RefreshReg$(_c2, \"MakeNotiOpen\");","map":{"version":3,"names":["React","useQuery","axios","jsxDEV","_jsxDEV","UpdateNoti","response","get","id","product","data","console","log","setFormData","name","quantity","price","description","error","message","_c","fetchNotifications","notifications","Error","MakeNotiOpen","isOpen","_s","isLoading","isError","forEach","noti","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/xampp/htdocs/Releans/frontend/src/component/Functions/MakeNotiOpen.js"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nconst UpdateNoti = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8000/api/notifications/${id}`\r\n    );\r\n    const product = response.data.product;\r\n    console.log(response.data);\r\n    setFormData({\r\n      name: product.name,\r\n      quantity: product.quantity,\r\n      price: product.price,\r\n      description: product.description,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching product:\", error.message);\r\n  }\r\n};\r\n\r\nconst fetchNotifications = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"http://127.0.0.1:8000/api/notReednotifications\"\r\n    );\r\n    console.log(response.data.notifications);\r\n    return response.data.notifications;\r\n  } catch (error) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n};\r\n\r\nconst MakeNotiOpen = ({ isOpen }) => {\r\n  const {\r\n    data: notifications,\r\n    isLoading,\r\n    isError,\r\n  } = useQuery(\"notifications\", fetchNotifications);\r\n\r\n  notifications.forEach((noti) => {\r\n    try {\r\n      UpdateNoti();\r\n    } catch {}\r\n  });\r\n\r\n  return isOpen ? <div>{/* Your notification UI here */}</div> : null;\r\n};\r\n\r\nexport default MakeNotiOpen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC7B,2CAA0CC,EAAG,EAChD,CAAC;IACD,MAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACD,OAAO;IACrCE,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACI,IAAI,CAAC;IAC1BG,WAAW,CAAC;MACVC,IAAI,EAAEL,OAAO,CAACK,IAAI;MAClBC,QAAQ,EAAEN,OAAO,CAACM,QAAQ;MAC1BC,KAAK,EAAEP,OAAO,CAACO,KAAK;MACpBC,WAAW,EAAER,OAAO,CAACQ;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;EACzD;AACF,CAAC;AAACC,EAAA,GAhBIf,UAAU;AAkBhB,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,gDACF,CAAC;IACDI,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACI,IAAI,CAACY,aAAa,CAAC;IACxC,OAAOhB,QAAQ,CAACI,IAAI,CAACY,aAAa;EACpC,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IACJhB,IAAI,EAAEY,aAAa;IACnBK,SAAS;IACTC;EACF,CAAC,GAAG3B,QAAQ,CAAC,eAAe,EAAEoB,kBAAkB,CAAC;EAEjDC,aAAa,CAACO,OAAO,CAAEC,IAAI,IAAK;IAC9B,IAAI;MACFzB,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,MAAM,CAAC;EACX,CAAC,CAAC;EAEF,OAAOoB,MAAM,gBAAGrB,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA2C,CAAC,GAAG,IAAI;AACrE,CAAC;AAACR,EAAA,CAdIF,YAAY;EAAA,QAKZvB,QAAQ;AAAA;AAAAkC,GAAA,GALRX,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAJ,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}