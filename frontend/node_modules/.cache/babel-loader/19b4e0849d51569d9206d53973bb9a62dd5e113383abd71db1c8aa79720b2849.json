{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nasync function updateNotification(id) {\n  try {\n    await axios.put(`http://127.0.0.1:8000/api/notifications/${id}`, {\n      open: \"true\"\n    });\n  } catch (error) {\n    // Handle error, e.g., show an error message\n    console.error(\"Error updating notification:\", error.message);\n  }\n}\nconst fetchNotifications = async () => {\n  try {\n    const response = await axios.get(\"http://127.0.0.1:8000/api/notReednotifications\");\n    return response.data.notifications;\n  } catch (error) {\n    throw new Error(\"Network response was not ok\");\n  }\n};\nconst MakeNotiOpen = ({\n  isOpen\n}) => {\n  _s();\n  const {\n    data: notifications,\n    isLoading,\n    isError\n  } = useQuery(\"notifications\", fetchNotifications);\n  useEffect(() => {\n    console.log(\"dddd\", notifications.length);\n    if (notifications && notifications.length > 0) {\n      // Iterate through notifications and update their status\n      notifications.forEach(notification => {\n        updateNotification(notification.id);\n      });\n    }\n  }, [notifications]);\n  return null;\n};\n_s(MakeNotiOpen, \"ybzBSQoPZtWhA5n63HMEfM9t2Sw=\", false, function () {\n  return [useQuery];\n});\n_c = MakeNotiOpen;\nexport default MakeNotiOpen;\nvar _c;\n$RefreshReg$(_c, \"MakeNotiOpen\");","map":{"version":3,"names":["React","useEffect","useQuery","axios","updateNotification","id","put","open","error","console","message","fetchNotifications","response","get","data","notifications","Error","MakeNotiOpen","isOpen","_s","isLoading","isError","log","length","forEach","notification","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Releans/frontend/src/component/Functions/MakeNotiOpen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\n\r\nasync function updateNotification(id) {\r\n  try {\r\n    await axios.put(`http://127.0.0.1:8000/api/notifications/${id}`, {\r\n      open: \"true\",\r\n    });\r\n  } catch (error) {\r\n    // Handle error, e.g., show an error message\r\n    console.error(\"Error updating notification:\", error.message);\r\n  }\r\n}\r\n\r\nconst fetchNotifications = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"http://127.0.0.1:8000/api/notReednotifications\"\r\n    );\r\n    return response.data.notifications;\r\n  } catch (error) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n};\r\n\r\nconst MakeNotiOpen = ({ isOpen }) => {\r\n  const {\r\n    data: notifications,\r\n    isLoading,\r\n    isError,\r\n  } = useQuery(\"notifications\", fetchNotifications);\r\n\r\n  useEffect(() => {\r\n    console.log(\"dddd\", notifications.length);\r\n    if (notifications && notifications.length > 0) {\r\n      // Iterate through notifications and update their status\r\n      notifications.forEach((notification) => {\r\n        updateNotification(notification.id);\r\n      });\r\n    }\r\n  }, [notifications]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default MakeNotiOpen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeC,kBAAkBA,CAACC,EAAE,EAAE;EACpC,IAAI;IACF,MAAMF,KAAK,CAACG,GAAG,CAAE,2CAA0CD,EAAG,EAAC,EAAE;MAC/DE,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC9D;AACF;AAEA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,gDACF,CAAC;IACD,OAAOD,QAAQ,CAACE,IAAI,CAACC,aAAa;EACpC,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd,MAAM,IAAIQ,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IACJL,IAAI,EAAEC,aAAa;IACnBK,SAAS;IACTC;EACF,CAAC,GAAGnB,QAAQ,CAAC,eAAe,EAAES,kBAAkB,CAAC;EAEjDV,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACa,GAAG,CAAC,MAAM,EAAEP,aAAa,CAACQ,MAAM,CAAC;IACzC,IAAIR,aAAa,IAAIA,aAAa,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC7C;MACAR,aAAa,CAACS,OAAO,CAAEC,YAAY,IAAK;QACtCrB,kBAAkB,CAACqB,YAAY,CAACpB,EAAE,CAAC;MACrC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACU,aAAa,CAAC,CAAC;EAEnB,OAAO,IAAI;AACb,CAAC;AAACI,EAAA,CAlBIF,YAAY;EAAA,QAKZf,QAAQ;AAAA;AAAAwB,EAAA,GALRT,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}