{"ast":null,"code":"// store.js\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authreducer from \"./AuthReducer\"; // Combine all your reducers\nconst NotiCount = JSON.parse(localStorage.getItem(\"previousNotificationCount\")) || null;\nconst data = !!localStorage.getItem(\"previousNotificationCount\");\nconst initialState = {\n  NotiCount,\n  data\n};\nconst store = createStore(authreducer, initialState, applyMiddleware(thunk));\nexport { store };","map":{"version":3,"names":["createStore","applyMiddleware","thunk","authreducer","NotiCount","JSON","parse","localStorage","getItem","data","initialState","store"],"sources":["C:/xampp/htdocs/Releans/frontend/src/component/Redux/store.js"],"sourcesContent":["// store.js\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authreducer from \"./AuthReducer\"; // Combine all your reducers\r\nconst NotiCount =\r\n  JSON.parse(localStorage.getItem(\"previousNotificationCount\")) || null;\r\nconst data = !!localStorage.getItem(\"previousNotificationCount\");\r\nconst initialState = {\r\n  NotiCount,\r\n  data,\r\n};\r\nconst store = createStore(authreducer, initialState, applyMiddleware(thunk));\r\n\r\nexport { store };\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AACzC,MAAMC,SAAS,GACbC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC,IAAI,IAAI;AACvE,MAAMC,IAAI,GAAG,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC;AAChE,MAAME,YAAY,GAAG;EACnBN,SAAS;EACTK;AACF,CAAC;AACD,MAAME,KAAK,GAAGX,WAAW,CAACG,WAAW,EAAEO,YAAY,EAAET,eAAe,CAACC,KAAK,CAAC,CAAC;AAE5E,SAASS,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}