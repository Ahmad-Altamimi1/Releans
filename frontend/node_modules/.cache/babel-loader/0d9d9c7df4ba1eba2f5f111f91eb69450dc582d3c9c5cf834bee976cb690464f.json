{"ast":null,"code":"// import React, { useState, useContext } from \"react\";\n// import { useQuery } from \"react-query\";\n// import axios from \"axios\";\n\n// import { Link } from \"react-router-dom\";\n\n// const fetchProducts = async () => {\n//   try {\n//     const response = await axios.get(\"http://127.0.0.1:8000/api/products/\");\n\n//     return response.data.products;\n//   } catch (error) {\n//     throw new Error(\"Network response was not ok\");\n//   }\n// };\n\n// export default function () {\n//   const [editpage, seteditpage] = useState(false);\n//   const [deletePage, setdeletePage] = useState(false);\n//   const {\n//     data: products,\n//     isLoading,\n//     error,\n//     refetch,\n//   } = useQuery(\"products\", fetchProducts);\n//   const handleRefetch = () => {\n//     refetch();\n//   };\n//   if (isLoading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n\n//   return (\n\n//       <>\n//         <div className=\"page-wrapper\">\n//         </div>\n//       </>\n\n//   );\n// }","map":{"version":3,"names":[],"sources":["E:/xampp/htdocs/Ahmad-react/Releans/frontend/src/component/sections/singleProduct/content.js"],"sourcesContent":["// import React, { useState, useContext } from \"react\";\r\n// import { useQuery } from \"react-query\";\r\n// import axios from \"axios\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const fetchProducts = async () => {\r\n//   try {\r\n//     const response = await axios.get(\"http://127.0.0.1:8000/api/products/\");\r\n\r\n//     return response.data.products;\r\n//   } catch (error) {\r\n//     throw new Error(\"Network response was not ok\");\r\n//   }\r\n// };\r\n\r\n// export default function () {\r\n//   const [editpage, seteditpage] = useState(false);\r\n//   const [deletePage, setdeletePage] = useState(false);\r\n//   const {\r\n//     data: products,\r\n//     isLoading,\r\n//     error,\r\n//     refetch,\r\n//   } = useQuery(\"products\", fetchProducts);\r\n//   const handleRefetch = () => {\r\n//     refetch();\r\n//   };\r\n//   if (isLoading) return <div>Loading...</div>;\r\n//   if (error) return <div>Error: {error.message}</div>;\r\n\r\n//   return (\r\n\r\n//       <>\r\n//         <div className=\"page-wrapper\">\r\n//         </div>\r\n//       </>\r\n      \r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}